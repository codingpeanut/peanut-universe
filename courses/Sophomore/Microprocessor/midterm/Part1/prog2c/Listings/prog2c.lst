


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             UARTDEMO, CODE, READONLY
    2 00000000 E002C000 
                       PINSEL0 EQU              0XE002C000  ; controls the func
                                                            tion of the pins
    3 00000000 E000C000 
                       U0START EQU              0XE000C000  ; start of UART0 re
                                                            gister
    4 00000000 0000000C 
                       LCR0    EQU              0XC         ; line control regi
                                                            ster for UART0
    5 00000000 00000014 
                       LSR0    EQU              0X14        ; line status regis
                                                            ter for UART0
    6 00000000 40000000 
                       RAMSTART
                               EQU              0X40000000  ; start of onboard 
                                                            RAM for 2104
    7 00000000         
    8 00000000                 ENTRY
    9 00000000         start
   10 00000000 E59FD190        LDR              sp, =RAMSTART ; set up stack po
                                                            inter
   11 00000004 EB00003C        BL               UARTConfig  ; initialize/config
                                                            ure UART0
   12 00000008         
   13 00000008         ; 2(c)  display reversely the string words
   14 00000008         ; --------------------- display reversely the string wor
                       ds -----------------------
   15 00000008         ; string_length = 42 (index: 0~41)
   16 00000008         ; 0                    21   26 29     36   41
   17 00000008         ; 411440521-Lee-Midterm Exam in Spring 2024!
   18 00000008         
   19 00000008         ; for '!' at 41
   20 00000008 E59F118C        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   21 0000000C E2811029        ADD              r1, #41     ; for '!'
   22 00000010 E5D10000        LDRB             r0, [r1]    ; load character
   23 00000014 EB000046        BL               Transmit    ; send character to
                                                             UAER0
   24 00000018         
   25 00000018         ; for "2024" at 37
   26 00000018 E59F117C        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   27 0000001C E2811025        ADD              r1, #37     ; for "2024"
   28 00000020 E3A02004        MOV              r2, #4      ; length_counter = 
                                                            4
   29 00000024         Loop3_2024
   30 00000024 E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   31 00000028 E3520000        CMP              r2, #0      ; length_counter gr
                                                            eater than 0?
   32 0000002C 1B000040        BLNE             Transmit    ; send character to
                                                             UAER0
   33 00000030 E2422001        SUB              r2, #1      ; counter--
   34 00000034 1AFFFFFA        BNE              Loop3_2024  ; continue if print
                                                            _counter not equals
                                                             to 0



ARM Macro Assembler    Page 2 


   35 00000038         
   36 00000038         ; for ' ' at 36
   37 00000038 E59F115C        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   38 0000003C E2811024        ADD              r1, #36     ; for ' '
   39 00000040 E5D10000        LDRB             r0, [r1]    ; load character
   40 00000044 EB00003A        BL               Transmit    ; send character to
                                                             UAER0
   41 00000048         
   42 00000048         ; for "Spring" at 30
   43 00000048 E59F114C        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   44 0000004C E281101E        ADD              r1, #30     ; for "Spring"
   45 00000050 E3A02006        MOV              r2, #6      ; length_counter = 
                                                            6
   46 00000054         Loop3_Spring
   47 00000054 E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   48 00000058 E3520000        CMP              r2, #0      ; length_counter gr
                                                            eater than 0?
   49 0000005C 1B000034        BLNE             Transmit    ; send character to
                                                             UAER0
   50 00000060 E2422001        SUB              r2, #1      ; counter--
   51 00000064 1AFFFFFA        BNE              Loop3_Spring ; continue if prin
                                                            t_counter not equal
                                                            s to 0
   52 00000068         
   53 00000068         ; for ' ' at 29
   54 00000068 E59F112C        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   55 0000006C E281101D        ADD              r1, #29     ; for ' '
   56 00000070 E5D10000        LDRB             r0, [r1]    ; load character
   57 00000074 EB00002E        BL               Transmit    ; send character to
                                                             UAER0
   58 00000078         
   59 00000078         ; for "in" at 27
   60 00000078 E59F111C        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   61 0000007C E281101B        ADD              r1, #27     ; for "Spring"
   62 00000080 E3A02002        MOV              r2, #2      ; length_counter = 
                                                            2
   63 00000084         Loop3_in
   64 00000084 E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   65 00000088 E3520000        CMP              r2, #0      ; length_counter gr
                                                            eater than 0?
   66 0000008C 1B000028        BLNE             Transmit    ; send character to
                                                             UAER0
   67 00000090 E2422001        SUB              r2, #1      ; counter--
   68 00000094 1AFFFFFA        BNE              Loop3_in    ; continue if print
                                                            _counter not equals
                                                             to 0
   69 00000098         
   70 00000098         ; for ' ' at 26
   71 00000098 E59F10FC        LDR              r1, =StudentData ; starting add



ARM Macro Assembler    Page 3 


                                                            ress of StudentData
                                                            
   72 0000009C E281101A        ADD              r1, #26     ; for ' '
   73 000000A0 E5D10000        LDRB             r0, [r1]    ; load character
   74 000000A4 EB000022        BL               Transmit    ; send character to
                                                             UAER0
   75 000000A8         
   76 000000A8         ; for "Exam" at 22
   77 000000A8 E59F10EC        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   78 000000AC E2811016        ADD              r1, #22     ; for "Exam"
   79 000000B0 E3A02004        MOV              r2, #4      ; length_counter = 
                                                            4
   80 000000B4         Loop3_Exam
   81 000000B4 E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   82 000000B8 E3520000        CMP              r2, #0      ; length_counter gr
                                                            eater than 0?
   83 000000BC 1B00001C        BLNE             Transmit    ; send character to
                                                             UAER0
   84 000000C0 E2422001        SUB              r2, #1      ; counter--
   85 000000C4 1AFFFFFA        BNE              Loop3_Exam  ; continue if print
                                                            _counter not equals
                                                             to 0
   86 000000C8         
   87 000000C8         ; for ' ' at 21
   88 000000C8 E59F10CC        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   89 000000CC E2811015        ADD              r1, #21     ; for ' '
   90 000000D0 E5D10000        LDRB             r0, [r1]    ; load character
   91 000000D4 EB000016        BL               Transmit    ; send character to
                                                             UAER0
   92 000000D8         
   93 000000D8         ; for "411440521-Lee-Midterm" at 0
   94 000000D8 E59F10BC        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   95 000000DC E2811000        ADD              r1, #0      ; for "411440521-Le
                                                            e-Midterm"
   96 000000E0 E3A02015        MOV              r2, #21     ; length_counter = 
                                                            21
   97 000000E4         Loop3_411440521
   98 000000E4 E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   99 000000E8 E3520000        CMP              r2, #0      ; length_counter gr
                                                            eater than 0?
  100 000000EC 1B000010        BLNE             Transmit    ; send character to
                                                             UAER0
  101 000000F0 E2422001        SUB              r2, #1      ; counter--
  102 000000F4 1AFFFFFA        BNE              Loop3_411440521 ; continue if p
                                                            rint_counter not eq
                                                            uals to 0
  103 000000F8         ; --------------------- display reversely the string wor
                       ds -----------------------
  104 000000F8         
  105 000000F8 EAFFFFFE 
                       done    B                done        ; otherwise we're d



ARM Macro Assembler    Page 4 


                                                            one
  106 000000FC         
  107 000000FC         ; Subroutine UARTConfig
  108 000000FC         ; This subroutine configures the I/O pins first. It
  109 000000FC         ; then sets up the UART control register. The
  110 000000FC         ; parameters
  111 000000FC         ; are set to 8 bits, no parity and 1 stop bit.
  112 000000FC         ; Registers used:
  113 000000FC         ; r5   scratch register
  114 000000FC         ; r6   scratch register
  115 000000FC         ; inputs: none
  116 000000FC         ; outputs: none
  117 000000FC         
  118 000000FC         UARTConfig
  119 000000FC E8AD4060        STMIA            sp!, {r5, r6, lr}
  120 00000100 E59F50BC        LDR              r5, =PINSEL0 ; base address of 
                                                            register
  121 00000104 E5956000        LDR              r6, [r5]    ; get contents
  122 00000108 E3C6600F        BIC              r6, r6, #0xF ; clear out lower 
                                                            nibble
  123 0000010C E3866005        ORR              r6, r6, #0x5 ; sets P0.0 to Tx0
                                                             and P0.1 to Rx0
  124 00000110 E5856000        STR              r6, [r5]    ; r/modify/w back t
                                                            o register
  125 00000114 E59F50AC        LDR              r5, =U0START
  126 00000118 E3A06083        MOV              r6, #0x83   ; set 8 bits, no pa
                                                            rity, 1 stop bit
  127 0000011C E5C5600C        STRB             r6, [r5, #LCR0] ; write control
                                                             byte to LCR
  128 00000120 E3A06061        MOV              r6, #0x61   ; 9600 baud @15 MHz
                                                             VPB clock
  129 00000124 E5C56000        STRB             r6, [r5]    ; store control byt
                                                            e
  130 00000128 E3A06003        MOV              r6, #3      ; set DLAB = 0
  131 0000012C E5C5600C        STRB             r6, [r5, #LCR0] ; Tx and Rx buf
                                                            fers set up
  132 00000130 E93D8060        LDMDB            sp!, {r5, r6, pc}
  133 00000134         
  134 00000134         
  135 00000134         ; Subroutine Transmit
  136 00000134         ; This routine puts one byte into the UART
  137 00000134         ; for transmitting.
  138 00000134         ; Register used:
  139 00000134         ; r5 - scratch
  140 00000134         ; r6 - scratch
  141 00000134         ; inputs: r0- byte to transmit
  142 00000134         ; outputs: none
  143 00000134         ;
  144 00000134         
  145 00000134         Transmit
  146 00000134 E8AD4060        STMIA            sp!, {r5, r6, lr}
  147 00000138 E59F5088        LDR              r5, =U0START
  148 0000013C         wait_Tx
  149 0000013C E5D56014        LDRB             r6, [r5, #LSR0] ; get status of
                                                             buffer
  150 00000140 E3160020        TST              r6, #0x20   ; buffer empty?
  151 00000144 0AFFFFFC        BEQ              wait_Tx     ; spin until buffer
                                                             empty
  152 00000148 E5C50000        STRB             r0, [r5]



ARM Macro Assembler    Page 5 


  153 0000014C E93D8060        LDMDB            sp!, {r5, r6, pc}
  154 00000150         
  155 00000150         Receive
  156 00000150 E8AD4060        STMIA            sp!, {r5, r6, lr}
  157 00000154 E59F506C        LDR              r5, =U0START
  158 00000158         wait_Rx
  159 00000158 E5D56014        LDRB             r6, [r5, #LSR0] ; get status of
                                                             buffer
  160 0000015C E3160001        TST              r6, #1      ; data ready?
  161 00000160 0AFFFFFC        BEQ              wait_Rx     ; until data ready
  162 00000164 E5D50000        LDRB             r0, [r5]
  163 00000168 E93D8060        LDMDB            sp!, {r5, r6, pc}
  164 0000016C         
  165 0000016C         StudentData
  166 0000016C         ;        0                    21   26 29     36   41
  167 0000016C 34 31 31 
              34 34 30 
              35 32 31 
              2D 4C 65 
              65 2D 4D 
              69 64 74 
              65 72 6D 
              20 45 78 
              61 6D 20 
              69 6E 20 
              53 70 72 
              69 6E 67 
              20 32 30 
              32 34 21 
              00               DCB              "411440521-Lee-Midterm Exam in 
Spring 2024!", 0 
                                                            ; string_length = 4
                                                            2 (index: 0~41)
  168 00000197                 END
              00 40000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              E002C000 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog2c.d -o.\objects\prog2c.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM
\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --prede
fine="__UVISION_VERSION SETA 528" --list=.\listings\prog2c.lst prog2c.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Loop3_2024 00000024

Symbol: Loop3_2024
   Definitions
      At line 29 in file prog2c.s
   Uses
      At line 34 in file prog2c.s
Comment: Loop3_2024 used once
Loop3_411440521 000000E4

Symbol: Loop3_411440521
   Definitions
      At line 97 in file prog2c.s
   Uses
      At line 102 in file prog2c.s
Comment: Loop3_411440521 used once
Loop3_Exam 000000B4

Symbol: Loop3_Exam
   Definitions
      At line 80 in file prog2c.s
   Uses
      At line 85 in file prog2c.s
Comment: Loop3_Exam used once
Loop3_Spring 00000054

Symbol: Loop3_Spring
   Definitions
      At line 46 in file prog2c.s
   Uses
      At line 51 in file prog2c.s
Comment: Loop3_Spring used once
Loop3_in 00000084

Symbol: Loop3_in
   Definitions
      At line 63 in file prog2c.s
   Uses
      At line 68 in file prog2c.s
Comment: Loop3_in used once
Receive 00000150

Symbol: Receive
   Definitions
      At line 155 in file prog2c.s
   Uses
      None
Comment: Receive unused
StudentData 0000016C

Symbol: StudentData
   Definitions
      At line 165 in file prog2c.s
   Uses
      At line 20 in file prog2c.s
      At line 26 in file prog2c.s
      At line 37 in file prog2c.s
      At line 43 in file prog2c.s
      At line 54 in file prog2c.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      At line 60 in file prog2c.s
      At line 71 in file prog2c.s
      At line 77 in file prog2c.s
      At line 88 in file prog2c.s
      At line 94 in file prog2c.s

Transmit 00000134

Symbol: Transmit
   Definitions
      At line 145 in file prog2c.s
   Uses
      At line 23 in file prog2c.s
      At line 32 in file prog2c.s
      At line 40 in file prog2c.s
      At line 49 in file prog2c.s
      At line 57 in file prog2c.s
      At line 66 in file prog2c.s
      At line 74 in file prog2c.s
      At line 83 in file prog2c.s
      At line 91 in file prog2c.s
      At line 100 in file prog2c.s

UARTConfig 000000FC

Symbol: UARTConfig
   Definitions
      At line 118 in file prog2c.s
   Uses
      At line 11 in file prog2c.s
Comment: UARTConfig used once
UARTDEMO 00000000

Symbol: UARTDEMO
   Definitions
      At line 1 in file prog2c.s
   Uses
      None
Comment: UARTDEMO unused
done 000000F8

Symbol: done
   Definitions
      At line 105 in file prog2c.s
   Uses
      At line 105 in file prog2c.s
Comment: done used once
start 00000000

Symbol: start
   Definitions
      At line 9 in file prog2c.s
   Uses
      None
Comment: start unused
wait_Rx 00000158

Symbol: wait_Rx
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 158 in file prog2c.s
   Uses
      At line 161 in file prog2c.s
Comment: wait_Rx used once
wait_Tx 0000013C

Symbol: wait_Tx
   Definitions
      At line 148 in file prog2c.s
   Uses
      At line 151 in file prog2c.s
Comment: wait_Tx used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

LCR0 0000000C

Symbol: LCR0
   Definitions
      At line 4 in file prog2c.s
   Uses
      At line 127 in file prog2c.s
      At line 131 in file prog2c.s

LSR0 00000014

Symbol: LSR0
   Definitions
      At line 5 in file prog2c.s
   Uses
      At line 149 in file prog2c.s
      At line 159 in file prog2c.s

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 2 in file prog2c.s
   Uses
      At line 120 in file prog2c.s
Comment: PINSEL0 used once
RAMSTART 40000000

Symbol: RAMSTART
   Definitions
      At line 6 in file prog2c.s
   Uses
      At line 10 in file prog2c.s
Comment: RAMSTART used once
U0START E000C000

Symbol: U0START
   Definitions
      At line 3 in file prog2c.s
   Uses
      At line 125 in file prog2c.s
      At line 147 in file prog2c.s
      At line 157 in file prog2c.s

5 symbols
353 symbols in table
