


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             UARTDEMO, CODE, READONLY
    2 00000000 E002C000 
                       PINSEL0 EQU              0XE002C000  ; controls the func
                                                            tion of the pins
    3 00000000 E000C000 
                       U0START EQU              0XE000C000  ; start of UART0 re
                                                            gister
    4 00000000 0000000C 
                       LCR0    EQU              0XC         ; line control regi
                                                            ster for UART0
    5 00000000 00000014 
                       LSR0    EQU              0X14        ; line status regis
                                                            ter for UART0
    6 00000000 40000000 
                       RAMSTART
                               EQU              0X40000000  ; start of onboard 
                                                            RAM for 2104
    7 00000000         
    8 00000000                 ENTRY
    9 00000000         start
   10 00000000 E59FD0D4        LDR              sp, =RAMSTART ; set up stack po
                                                            inter
   11 00000004 EB00000D        BL               UARTConfig  ; initialize/config
                                                            ure UART0
   12 00000008         
   13 00000008         ; 2(a) display reversely the string and continuously the
                        string
   14 00000008         ; ------------------------- print student data reversely
                        -------------------------
   15 00000008 E59F10D0        LDR              r1, =StudentData ; starting add
                                                            ress of StudentData
                                                            
   16 0000000C E2811029        ADD              r1, #41     ; rev_head_address(
                                                            r1) = StudentData(r
                                                            1) + string_length(
                                                            #43)
   17 00000010 E3A0202A        MOV              r2, #42     ; counter = string_
                                                            length + 1
   18 00000014         Loop1_Tx_Rev
   19 00000014 E4510001        LDRB             r0, [r1], #-1 ; load character,
                                                             decrement address
   20 00000018 E3520000        CMP              r2, #0      ; print_counter gre
                                                            ater than 0?
   21 0000001C 1B000015        BLNE             Transmit    ; send character to
                                                             UAER0
   22 00000020 E2422001        SUB              r2, #1      ; counter--
   23 00000024 1AFFFFFA        BNE              Loop1_Tx_Rev ; continue if prin
                                                            t_counter not equal
                                                            s to 0
   24 00000028         ; ------------------------- print student data reversely
                        -------------------------
   25 00000028         
   26 00000028         ; ------------------------------ print student data ----
                       --------------------------
   27 00000028 E59F10B0        LDR              r1, =StudentData ; load address
                                                             of StudentData int
                                                            o r0 (param 1 of Re
                                                            verseString)
   28 0000002C         Loop1_Tx



ARM Macro Assembler    Page 2 


   29 0000002C E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   30 00000030 E3500000        CMP              r0, #0      ; null terminated?
   31 00000034 1B00000F        BLNE             Transmit    ; send character to
                                                             UAER0
   32 00000038 1AFFFFFB        BNE              Loop1_Tx    ; continue if not a
                                                             '0'
   33 0000003C         ; ------------------------------ print student data ----
                       --------------------------
   34 0000003C         
   35 0000003C EAFFFFFE 
                       done    B                done        ; otherwise we're d
                                                            one
   36 00000040         
   37 00000040         ; Subroutine UARTConfig
   38 00000040         ; This subroutine configures the I/O pins first. It
   39 00000040         ; then sets up the UART control register. The
   40 00000040         ; parameters
   41 00000040         ; are set to 8 bits, no parity and 1 stop bit.
   42 00000040         ; Registers used:
   43 00000040         ; r5   scratch register
   44 00000040         ; r6   scratch register
   45 00000040         ; inputs: none
   46 00000040         ; outputs: none
   47 00000040         
   48 00000040         UARTConfig
   49 00000040 E8AD4060        STMIA            sp!, {r5, r6, lr}
   50 00000044 E59F509C        LDR              r5, =PINSEL0 ; base address of 
                                                            register
   51 00000048 E5956000        LDR              r6, [r5]    ; get contents
   52 0000004C E3C6600F        BIC              r6, r6, #0xF ; clear out lower 
                                                            nibble
   53 00000050 E3866005        ORR              r6, r6, #0x5 ; sets P0.0 to Tx0
                                                             and P0.1 to Rx0
   54 00000054 E5856000        STR              r6, [r5]    ; r/modify/w back t
                                                            o register
   55 00000058 E59F508C        LDR              r5, =U0START
   56 0000005C E3A06083        MOV              r6, #0x83   ; set 8 bits, no pa
                                                            rity, 1 stop bit
   57 00000060 E5C5600C        STRB             r6, [r5, #LCR0] ; write control
                                                             byte to LCR
   58 00000064 E3A06061        MOV              r6, #0x61   ; 9600 baud @15 MHz
                                                             VPB clock
   59 00000068 E5C56000        STRB             r6, [r5]    ; store control byt
                                                            e
   60 0000006C E3A06003        MOV              r6, #3      ; set DLAB = 0
   61 00000070 E5C5600C        STRB             r6, [r5, #LCR0] ; Tx and Rx buf
                                                            fers set up
   62 00000074 E93D8060        LDMDB            sp!, {r5, r6, pc}
   63 00000078         
   64 00000078         
   65 00000078         ; Subroutine Transmit
   66 00000078         ; This routine puts one byte into the UART
   67 00000078         ; for transmitting.
   68 00000078         ; Register used:
   69 00000078         ; r5 - scratch
   70 00000078         ; r6 - scratch
   71 00000078         ; inputs: r0- byte to transmit
   72 00000078         ; outputs: none



ARM Macro Assembler    Page 3 


   73 00000078         ;
   74 00000078         
   75 00000078         Transmit
   76 00000078 E8AD4060        STMIA            sp!, {r5, r6, lr}
   77 0000007C E59F5068        LDR              r5, =U0START
   78 00000080         wait_Tx
   79 00000080 E5D56014        LDRB             r6, [r5, #LSR0] ; get status of
                                                             buffer
   80 00000084 E3160020        TST              r6, #0x20   ; buffer empty?
   81 00000088 0AFFFFFC        BEQ              wait_Tx     ; spin until buffer
                                                             empty
   82 0000008C E5C50000        STRB             r0, [r5]
   83 00000090 E93D8060        LDMDB            sp!, {r5, r6, pc}
   84 00000094         
   85 00000094         Receive
   86 00000094 E8AD4060        STMIA            sp!, {r5, r6, lr}
   87 00000098 E59F504C        LDR              r5, =U0START
   88 0000009C         wait_Rx
   89 0000009C E5D56014        LDRB             r6, [r5, #LSR0] ; get status of
                                                             buffer
   90 000000A0 E3160001        TST              r6, #1      ; data ready?
   91 000000A4 0AFFFFFC        BEQ              wait_Rx     ; until data ready
   92 000000A8 E5D50000        LDRB             r0, [r5]
   93 000000AC E93D8060        LDMDB            sp!, {r5, r6, pc}
   94 000000B0         
   95 000000B0         StudentData
   96 000000B0         ;        0                    21   26 29     36   41
   97 000000B0 34 31 31 
              34 34 30 
              35 32 31 
              2D 4C 65 
              65 2D 4D 
              69 64 74 
              65 72 6D 
              20 45 78 
              61 6D 20 
              69 6E 20 
              53 70 72 
              69 6E 67 
              20 32 30 
              32 34 21 
              00               DCB              "411440521-Lee-Midterm Exam in 
Spring 2024!", 0 
                                                            ; string_length = 4
                                                            2 (index: 0~41)
   98 000000DB                 END
              00 40000000 
              00000000 
              00000000 
              E002C000 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog2a.d -o.\objects\prog2a.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM
\CMSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --prede
fine="__UVISION_VERSION SETA 528" --list=.\listings\prog2a.lst prog2a.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Loop1_Tx 0000002C

Symbol: Loop1_Tx
   Definitions
      At line 28 in file prog2a.s
   Uses
      At line 32 in file prog2a.s
Comment: Loop1_Tx used once
Loop1_Tx_Rev 00000014

Symbol: Loop1_Tx_Rev
   Definitions
      At line 18 in file prog2a.s
   Uses
      At line 23 in file prog2a.s
Comment: Loop1_Tx_Rev used once
Receive 00000094

Symbol: Receive
   Definitions
      At line 85 in file prog2a.s
   Uses
      None
Comment: Receive unused
StudentData 000000B0

Symbol: StudentData
   Definitions
      At line 95 in file prog2a.s
   Uses
      At line 15 in file prog2a.s
      At line 27 in file prog2a.s

Transmit 00000078

Symbol: Transmit
   Definitions
      At line 75 in file prog2a.s
   Uses
      At line 21 in file prog2a.s
      At line 31 in file prog2a.s

UARTConfig 00000040

Symbol: UARTConfig
   Definitions
      At line 48 in file prog2a.s
   Uses
      At line 11 in file prog2a.s
Comment: UARTConfig used once
UARTDEMO 00000000

Symbol: UARTDEMO
   Definitions
      At line 1 in file prog2a.s
   Uses
      None
Comment: UARTDEMO unused
done 0000003C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: done
   Definitions
      At line 35 in file prog2a.s
   Uses
      At line 35 in file prog2a.s
Comment: done used once
start 00000000

Symbol: start
   Definitions
      At line 9 in file prog2a.s
   Uses
      None
Comment: start unused
wait_Rx 0000009C

Symbol: wait_Rx
   Definitions
      At line 88 in file prog2a.s
   Uses
      At line 91 in file prog2a.s
Comment: wait_Rx used once
wait_Tx 00000080

Symbol: wait_Tx
   Definitions
      At line 78 in file prog2a.s
   Uses
      At line 81 in file prog2a.s
Comment: wait_Tx used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

LCR0 0000000C

Symbol: LCR0
   Definitions
      At line 4 in file prog2a.s
   Uses
      At line 57 in file prog2a.s
      At line 61 in file prog2a.s

LSR0 00000014

Symbol: LSR0
   Definitions
      At line 5 in file prog2a.s
   Uses
      At line 79 in file prog2a.s
      At line 89 in file prog2a.s

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 2 in file prog2a.s
   Uses
      At line 50 in file prog2a.s
Comment: PINSEL0 used once
RAMSTART 40000000

Symbol: RAMSTART
   Definitions
      At line 6 in file prog2a.s
   Uses
      At line 10 in file prog2a.s
Comment: RAMSTART used once
U0START E000C000

Symbol: U0START
   Definitions
      At line 3 in file prog2a.s
   Uses
      At line 55 in file prog2a.s
      At line 77 in file prog2a.s
      At line 87 in file prog2a.s

5 symbols
350 symbols in table
