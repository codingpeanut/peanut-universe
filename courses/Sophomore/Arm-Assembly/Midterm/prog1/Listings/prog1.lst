


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             prog1, CODE, READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         ; r0 is source/answer memory address
    5 00000000         ; r1 is source data
    6 00000000         ; r2 is temp data
    7 00000000         ; r4 is mask
    8 00000000         ; r9 is the answer
    9 00000000         
   10 00000000         ; 411440521 JoshLee
   11 00000000         ;--------------------------------------;
   12 00000000         ; Assume a 32-bit word at memory address 0x40000000 cont
                       ains 0xBEEFFACE.
   13 00000000 E3A00101        LDR              r0, =0x40000000
   14 00000004 E59F1094        LDR              r1, =0xBEEFFACE
   15 00000008 E5801000        STR              r1, [r0]
   16 0000000C         
   17 0000000C         
   18 0000000C         ; 411440521 JoshLee
   19 0000000C         ;--------------------------------------;1.(1)
   20 0000000C         ; insert the value 0x8765 into the word so that 
   21 0000000C         ; the final value is 0xB8765ACE
   22 0000000C E5909000        LDR              r9, [r0]
   23 00000010 E59F208C        LDR              r2, =0x8765
   24 00000014 E59F408C        LDR              r4, =0x0FFFF000
   25 00000018 E1C99004        BIC              r9, r4
   26 0000001C E1899602        ORR              r9, r2, LSL #12
   27 00000020 E5809000        STR              r9, [r0]
   28 00000024         
   29 00000024         
   30 00000024         ; 411440521 JoshLee
   31 00000024         ;--------------------------------------;1.(2)
   32 00000024         ; set bits 5, 9, 13 and 17 of the word and 
   33 00000024         ; leave the remaining bits unchanged
   34 00000024 E3A00101        LDR              r0, =0x40000000
   35 00000028 E59F1070        LDR              r1, =0xBEEFFACE
   36 0000002C E5801000        STR              r1, [r0]
   37 00000030 E5909000        LDR              r9, [r0]
   38 00000034 E59F4070        LDR              r4, =0x22220 ;0b0010 0010 0010 
                                                            0010 0000
   39 00000038 E1899004        ORR              r9, r4
   40 0000003C E5809000        STR              r9, [r0]
   41 00000040         
   42 00000040         
   43 00000040         ; 411440521 JoshLee
   44 00000040         ;--------------------------------------;1.(3)
   45 00000040         ; use one way to clear bits 7, 10, and 16 of the word 
   46 00000040         ; and leave the remainingbits unchanged,
   47 00000040 E3A00101        LDR              r0, =0x40000000
   48 00000044 E59F1054        LDR              r1, =0xBEEFFACE
   49 00000048 E5801000        STR              r1, [r0]
   50 0000004C E5909000        LDR              r9, [r0]
   51 00000050 E59F4058        LDR              r4, =0x10480 ;0b0001 0000 0100 
                                                            1000 0000
   52 00000054 E1C99004        BIC              r9, r4
   53 00000058 E5809000        STR              r9, [r0]
   54 0000005C         
   55 0000005C         
   56 0000005C         ; 411440521 JoshLee



ARM Macro Assembler    Page 2 


   57 0000005C         ;--------------------------------------;1.(4)
   58 0000005C         ; use another way to clear bits 7, 10, and 16 of the wor
                       d and 
   59 0000005C         ; leave the remaining bits unchanged
   60 0000005C E3A00101        LDR              r0, =0x40000000
   61 00000060 E59F1038        LDR              r1, =0xBEEFFACE
   62 00000064 E5801000        STR              r1, [r0]
   63 00000068 E5909000        LDR              r9, [r0]
   64 0000006C E59F403C        LDR              r4, =0x10480 ;0b0001 0000 0100 
                                                            1000 0000
   65 00000070 E3E02000        LDR              r2, =0xFFFFFFFF
   66 00000074 E0244002        EOR              r4, r2
   67 00000078 E0099004        AND              r9, r4
   68 0000007C E5809000        STR              r9, [r0]
   69 00000080         
   70 00000080         
   71 00000080         ; 411440521 JoshLee
   72 00000080         ;---------------------------------------;1.(5)
   73 00000080         ; change bits 18, 25, and 26 of the word and 
   74 00000080         ; leave the remaining bitsunchanged
   75 00000080 E3A00101        LDR              r0, =0x40000000
   76 00000084 E59F1014        LDR              r1, =0xBEEFFACE
   77 00000088 E5801000        STR              r1, [r0]
   78 0000008C E5909000        LDR              r9, [r0]
   79 00000090 E59F401C        LDR              r4, =0x06040000 ;0b0110 0000 01
                                                            00 0000 0000 0000 0
                                                            000
   80 00000094 E0299004        EOR              r9, r4
   81 00000098 E5809000        STR              r9, [r0]
   82 0000009C         
   83 0000009C         
   84 0000009C EAFFFFFE 
                       stop    B                stop
   85 000000A0                 END
              BEEFFACE 
              00008765 
              0FFFF000 
              00022220 
              00010480 
              06040000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog1.d -o.\objects\prog1.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\C
MSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefi
ne="__UVISION_VERSION SETA 528" --list=.\listings\prog1.lst prog1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

prog1 00000000

Symbol: prog1
   Definitions
      At line 1 in file prog1.s
   Uses
      None
Comment: prog1 unused
stop 0000009C

Symbol: stop
   Definitions
      At line 84 in file prog1.s
   Uses
      At line 84 in file prog1.s
Comment: stop used once
2 symbols
336 symbols in table
