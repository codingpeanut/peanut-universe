


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             prog3, CODE ,READONLY
    2 00000000                 ENTRY
    3 00000000         
    4 00000000         ; r0 is data address
    5 00000000         ; r1 is data
    6 00000000         ; r2 is one bit of data
    7 00000000         ; r3 is the amount of data
    8 00000000         
    9 00000000         ; 411440521 JoshLee
   10 00000000         ;----------------------------------;3.(1)
   11 00000000         ; Point out each stored value from the memory window 
   12 00000000         ; and write down the address of each variable (data1~dat
                       a5).
   13 00000000 E28F1C01        ADR              r1, data1
   14 00000004         
   15 00000004         
   16 00000004         ; 411440521 JoshLee
   17 00000004         ;----------------------------------;3.(2)
   18 00000004         ; Store data1 into memory started from address 0x4000000
                       0.
   19 00000004 E28F10FC        ADR              r1, data1
   20 00000008 E3A00101        LDR              r0, =0x40000000
   21 0000000C         
   22 0000000C E4D12001 
                       loop2   LDRB             r2, [r1], #1
   23 00000010 E3520000        CMP              r2, #0
   24 00000014 14C02001        STRBNE           r2, [r0], #1
   25 00000018 1AFFFFFB        BNE              loop2
   26 0000001C         
   27 0000001C         
   28 0000001C         ; 411440521 JoshLee
   29 0000001C         ;----------------------------------;3.(3) 
   30 0000001C         ; Reverse the string in data1 and put the reversed strin
                       g 
   31 0000001C         ; in the memory started at address 0x40000030.
   32 0000001C E28F10E4        ADR              r1, data1
   33 00000020 E3A001C1        LDR              r0, =0x40000030
   34 00000024 E2800019        ADD              r0, #25     ; pointer points th
                                                            e last bit of data1
                                                            
   35 00000028 E4D12001 
                       loop3   LDRB             r2, [r1], #1
   36 0000002C E3520000        CMP              r2, #0
   37 00000030 14402001        STRBNE           r2, [r0], #-1
   38 00000034 1AFFFFFB        BNE              loop3
   39 00000038         
   40 00000038         
   41 00000038         ; 411440521 JoshLee
   42 00000038         ;---------------------------------;3.(4)
   43 00000038         ; Store data2 into memory started from address 0x4000006
                       0.
   44 00000038 E28F10E4        ADR              r1, data2
   45 0000003C E59F0120        LDR              r0, =0x40000060
   46 00000040 E3A03004        LDR              r3, =4
   47 00000044         
   48 00000044 E0D120B2 
                       loop4   LDRH             r2, [r1], #2
   49 00000048 E0C020B2        STRH             r2, [r0], #2
   50 0000004C E2433001        SUB              r3, #1



ARM Macro Assembler    Page 2 


   51 00000050 E3530000        CMP              r3, #0
   52 00000054 1AFFFFFA        BNE              loop4
   53 00000058         
   54 00000058         
   55 00000058         ; 411440521 JoshLee
   56 00000058         ;---------------------------------;3.(5)
   57 00000058         ; Store data3 into memory started from address 0x4000007
                       0.
   58 00000058 E28F10CC        ADR              r1, data3
   59 0000005C E59F0104        LDR              r0, =0x40000070
   60 00000060 E3A03006        LDR              r3, =6
   61 00000064         
   62 00000064 E4912004 
                       loop5   LDR              r2, [r1], #4
   63 00000068 E4802004        STR              r2, [r0], #4
   64 0000006C E2433001        SUB              r3, #1
   65 00000070 E3530000        CMP              r3, #0
   66 00000074 1AFFFFFA        BNE              loop5
   67 00000078         
   68 00000078         
   69 00000078         
   70 00000078         ; 411440521 JoshLee
   71 00000078         ;---------------------------------;3.(6)
   72 00000078         ; Reverse data3 and put the reversed data3 
   73 00000078         ; in the memory started from address 0x40000090.
   74 00000078 E28F10AC        ADR              r1, data3
   75 0000007C E59F00E8        LDR              r0, =0x40000090
   76 00000080 E2800014        ADD              r0, #20
   77 00000084 E3A03006        LDR              r3, =6
   78 00000088         
   79 00000088 E4912004 
                       loop6   LDR              r2, [r1], #4
   80 0000008C E4002004        STR              r2, [r0], #-4
   81 00000090 E2433001        SUB              r3, #1
   82 00000094 E3530000        CMP              r3, #0
   83 00000098 1AFFFFFA        BNE              loop6
   84 0000009C         
   85 0000009C         
   86 0000009C         
   87 0000009C         ; 411440521 JoshLee
   88 0000009C         ;---------------------------------;3.(7)
   89 0000009C         ; Store the string data4 into memory started 
   90 0000009C         ; from address 0x400000B0.
   91 0000009C E28F10A0        ADR              r1, data4
   92 000000A0 E59F00C8        LDR              r0, =0x400000B0
   93 000000A4 E3A03007        LDR              r3, =7
   94 000000A8         
   95 000000A8 E4D12001 
                       loop7   LDRB             r2, [r1], #1
   96 000000AC E4C02001        STRB             r2, [r0], #1
   97 000000B0 E2433001        SUB              r3, #1
   98 000000B4 E3530000        CMP              r3, #0
   99 000000B8 1AFFFFFA        BNE              loop7
  100 000000BC         
  101 000000BC         
  102 000000BC         ; 411440521 JoshLee
  103 000000BC         ;---------------------------------;3.(8)
  104 000000BC         ; Store data5 into memory started from address 0x400000C
                       0.



ARM Macro Assembler    Page 3 


  105 000000BC E28F1088        ADR              r1, data5
  106 000000C0 E59F00AC        LDR              r0, =0x400000C0
  107 000000C4 E3A03006        LDR              r3, =6
  108 000000C8         
  109 000000C8 E4912004 
                       loop8   LDR              r2, [r1], #4
  110 000000CC E4802004        STR              r2, [r0], #4
  111 000000D0 E2433001        SUB              r3, #1
  112 000000D4 E3530000        CMP              r3, #0
  113 000000D8 1AFFFFFA        BNE              loop8
  114 000000DC         
  115 000000DC         
  116 000000DC         ; 411440521 JoshLee
  117 000000DC         ;---------------------------------;3.(9)
  118 000000DC         ; Add the 6 words in data5 and put the sum in the word a
                       t 
  119 000000DC         ; memory address 0x400000E0.
  120 000000DC E28F1068        ADR              r1, data5
  121 000000E0 E59F0090        LDR              r0, =0x400000E0
  122 000000E4 E3A03006        LDR              r3, =6
  123 000000E8 E3A07000        LDR              r7, =0      ; sum
  124 000000EC         
  125 000000EC E4912004 
                       loop9   LDR              r2, [r1], #4
  126 000000F0 E0877002        ADD              r7, r2
  127 000000F4 E2433001        SUB              r3, #1
  128 000000F8 E3530000        CMP              r3, #0
  129 000000FC 1AFFFFFA        BNE              loop9
  130 00000100 E5807000        STR              r7, [r0]
  131 00000104         
  132 00000104         
  133 00000104 EAFFFFFE 
                       stop    B                stop
  134 00000108         
  135 00000108 4D 69 64 
              74 65 72 
              6D 20 45 
              78 61 6D 
              20 69 6E 
              20 46 61 
              6C 6C 20 
              32 30 32 
              33 21 00 data1   DCB              "Midterm Exam in Fall 2023!", 0
  136 00000123 00 34 12 
              78 56 EF 
              BE CE FA data2   DCW              0x1234, 0x5678, 0xBEEF, 0xFACE
  137 0000012C 00008ECC 
              0000FE37 
              0000ABCD 
              00000001 
              00000005 
              1234FACE data3   DCD              0x8ECC, 0xFE37, 0xABCD, 1, 5, 0
x1234FACE
  138 00000144 CF 17 27 
              54 FA FF 
              AD       data4   DCB              0xCF, 23, 39, 0x54, 250, 0xFF, 
0xAD
  139 0000014B 00 0000FE37 
              00000001 



ARM Macro Assembler    Page 4 


              00000005 
              00000014 
              ABCDFACE 
              12345678 data5   DCD              0xFE37, 1, 5, 20, 0xABCDFACE, 0
x12345678
  140 00000164         
  141 00000164                 END
              40000060 
              40000070 
              40000090 
              400000B0 
              400000C0 
              400000E0 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog3.d -o.\objects\prog3.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\C
MSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefi
ne="__UVISION_VERSION SETA 528" --list=.\listings\prog3.lst prog3.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

data1 00000108

Symbol: data1
   Definitions
      At line 135 in file prog3.s
   Uses
      At line 13 in file prog3.s
      At line 19 in file prog3.s
      At line 32 in file prog3.s

data2 00000124

Symbol: data2
   Definitions
      At line 136 in file prog3.s
   Uses
      At line 44 in file prog3.s
Comment: data2 used once
data3 0000012C

Symbol: data3
   Definitions
      At line 137 in file prog3.s
   Uses
      At line 58 in file prog3.s
      At line 74 in file prog3.s

data4 00000144

Symbol: data4
   Definitions
      At line 138 in file prog3.s
   Uses
      At line 91 in file prog3.s
Comment: data4 used once
data5 0000014C

Symbol: data5
   Definitions
      At line 139 in file prog3.s
   Uses
      At line 105 in file prog3.s
      At line 120 in file prog3.s

loop2 0000000C

Symbol: loop2
   Definitions
      At line 22 in file prog3.s
   Uses
      At line 25 in file prog3.s
Comment: loop2 used once
loop3 00000028

Symbol: loop3
   Definitions
      At line 35 in file prog3.s
   Uses
      At line 38 in file prog3.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: loop3 used once
loop4 00000044

Symbol: loop4
   Definitions
      At line 48 in file prog3.s
   Uses
      At line 52 in file prog3.s
Comment: loop4 used once
loop5 00000064

Symbol: loop5
   Definitions
      At line 62 in file prog3.s
   Uses
      At line 66 in file prog3.s
Comment: loop5 used once
loop6 00000088

Symbol: loop6
   Definitions
      At line 79 in file prog3.s
   Uses
      At line 83 in file prog3.s
Comment: loop6 used once
loop7 000000A8

Symbol: loop7
   Definitions
      At line 95 in file prog3.s
   Uses
      At line 99 in file prog3.s
Comment: loop7 used once
loop8 000000C8

Symbol: loop8
   Definitions
      At line 109 in file prog3.s
   Uses
      At line 113 in file prog3.s
Comment: loop8 used once
loop9 000000EC

Symbol: loop9
   Definitions
      At line 125 in file prog3.s
   Uses
      At line 129 in file prog3.s
Comment: loop9 used once
prog3 00000000

Symbol: prog3
   Definitions
      At line 1 in file prog3.s
   Uses
      None
Comment: prog3 unused
stop 00000104




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: stop
   Definitions
      At line 133 in file prog3.s
   Uses
      At line 133 in file prog3.s
Comment: stop used once
15 symbols
349 symbols in table
