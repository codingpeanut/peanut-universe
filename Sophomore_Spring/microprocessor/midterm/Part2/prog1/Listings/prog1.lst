


ARM Macro Assembler    Page 1 


    1 00000000 00000100 
                       Stack   EQU              0x00000100
    2 00000000 00000D14 
                       DivbyZ  EQU              0xD14
    3 00000000 00000D24 
                       SYSHNDCTRL
                               EQU              0xD24
    4 00000000 00000D2A 
                       Usagefault
                               EQU              0xD2A
    5 00000000 E000E000 
                       NVICBase
                               EQU              0xE000E000
    6 00000000         
    7 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
 = 3
    8 00000000         StackMem
    9 00000000                 SPACE            Stack
   10 00000100                 PRESERVE8
   11 00000100         
   12 00000100                 AREA             RESET, CODE, READONLY
   13 00000000                 THUMB
   14 00000000         
   15 00000000         ; The vector table sits here
   16 00000000         ; We'll define just a few of them and leave the rest at 
                       0 for now
   17 00000000 00000100        DCD              StackMem + Stack ; Top of Stack
                                                            
   18 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   19 00000008 00000000        DCD              NmiISR      ; NMI Handler
   20 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   21 00000010 00000000        DCD              IntDefaultHandler 
                                                            ; MPU Fault Handler
                                                            
   22 00000014 00000000        DCD              IntDefaultHandler 
                                                            ; Bus Fault Handler
                                                            
   23 00000018 00000000        DCD              IntDefaultHandler ; Usage Fault
                                                             Handler
   24 0000001C         
   25 0000001C                 EXPORT           Reset_Handler
   26 0000001C                 ENTRY
   27 0000001C         
   28 0000001C         Reset_Handler
   29 0000001C         ; MRS  r8, CONTROL
   30 0000001C         ; ORR  r8, #1
   31 0000001C         ; MSR  CONTROL, r8
   32 0000001C         
   33 0000001C         ; enable the divide-by-zero trap
   34 0000001C         ; located in the NVIC
   35 0000001C         ; base: 0xE000E000
   36 0000001C         ; offset: 0xD14
   37 0000001C         ; bit: 4
   38 0000001C F04F 26E0       LDR              r6, =NVICBase
   39 00000020 F640 5714       LDR              r7, =DivbyZ
   40 00000024 59F1            LDR              r1, [r6, r7]
   41 00000026 F041 0110       ORR              r1, #0x10   ; enable bit 4
   42 0000002A 51F1            STR              r1, [r6, r7]



ARM Macro Assembler    Page 2 


   43 0000002C         
   44 0000002C         ; now turn on the usage fault exception
   45 0000002C F640 5724       LDR              r7, =SYSHNDCTRL ; (p. 163)
   46 00000030 59F1            LDR              r1, [r6, r7]
   47 00000032 F441 2180       ORR              r1, #0x40000
   48 00000036 51F1            STR              r1, [r6, r7]
   49 00000038         
   50 00000038         ; try out a divide by 2 then a divide by 0!
   51 00000038 F04F 0000       MOV              r0, #0
   52 0000003C F04F 3111       MOV              r1, #0x11111111
   53 00000040 F04F 3222       MOV              r2, #0x22222222
   54 00000044 F04F 3333       MOV              r3, #0x33333333
   55 00000048         
   56 00000048         ; this divide works just fine
   57 00000048 FBB2 F4F1       UDIV             r4, r2, r1
   58 0000004C         ; this divide takes an exception
   59 0000004C FBB3 F5F0       UDIV             r5, r3, r0
   60 00000050         
   61 00000050 E7FE    Exit    B                Exit
   62 00000052         
   63 00000052 E7FE    NmiISR  B                NmiISR
   64 00000054 E7FE    FaultISR
                               B                FaultISR
   65 00000056         
   66 00000056         IntDefaultHandler
   67 00000056         ; let's read the Usage Fault Status Register
   68 00000056 F640 572A       LDR              r7, =Usagefault
   69 0000005A 5BF1            LDRH             r1, [r6, r7]
   70 0000005C F491 7F00       TEQ              r1, #0x200
   71 00000060 D100            BNE              Happened
   72 00000062 D00E            BEQ              NotHappened
   73 00000064         
   74 00000064         
   75 00000064         Happened
   76 00000064 4B1B            LDR              r3, =MSG_with_Error
   77 00000066 491C            LDR              r1, =0x20000030 ; starting addr
                                                            ess for string to b
                                                            e write
   78 00000068         Loop1_STR_string
   79 00000068 F853 5B01       LDR              r5, [r3], #1
   80 0000006C F801 5B01       STRB             r5, [r1], #1
   81 00000070 2D00            CMP              r5, #0
   82 00000072 D1F9            BNE              Loop1_STR_string
   83 00000074         
   84 00000074 F3EF 8814       MRS              r8, CONTROL
   85 00000078 F048 0801       ORR              r8, #1
   86 0000007C F388 8814       MSR              CONTROL, r8
   87 00000080         
   88 00000080 4770            BX               lr
   89 00000082         
   90 00000082         
   91 00000082         NotHappened
   92 00000082 4B16            LDR              r3, =MSG_without_Error
   93 00000084 4916            LDR              r1, =0x20000090 ; starting addr
                                                            ess for string to b
                                                            e write
   94 00000086         Loop2_STR_string
   95 00000086 F853 5B01       LDR              r5, [r3], #1
   96 0000008A F801 5B01       STRB             r5, [r1], #1



ARM Macro Assembler    Page 3 


   97 0000008E 2D00            CMP              r5, #0
   98 00000090 D1F9            BNE              Loop2_STR_string
   99 00000092         
  100 00000092 F3EF 8814       MRS              r8, CONTROL
  101 00000096 F048 0801       ORR              r8, #1
  102 0000009A F388 8814       MSR              CONTROL, r8
  103 0000009E         
  104 0000009E 4770            BX               lr
  105 000000A0         
  106 000000A0         
  107 000000A0 E7FE    done    B                done
  108 000000A2 00 00           ALIGN
  109 000000A4         MSG_with_Error
  110 000000A4 44 49 56 
              49 44 45 
              2D 42 59 
              2D 30 20 
              48 61 70 
              70 65 6E 
              65 64 21 
              00               DCB              "DIVIDE-BY-0 Happened!", 0
  111 000000BA         MSG_without_Error
  112 000000BA 44 49 56 
              49 44 45 
              2D 42 59 
              2D 30 20 
              4E 6F 74 
              20 48 61 
              70 70 65 
              6E 65 64 
              21 00            DCB              "DIVIDE-BY-0 Not Happened!", 0
  113 000000D4                 END
              00000000 
              20000030 
              00000000 
              20000090 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\prog1.d -o.\objects\prog1.o -IC:\Keil_v5\ARM\RV31\INC
 -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\TI\TM4C123 --predefine="__
EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\prog1.l
st prog1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 7 in file prog1.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 8 in file prog1.s
   Uses
      At line 17 in file prog1.s
Comment: StackMem used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Exit 00000050

Symbol: Exit
   Definitions
      At line 61 in file prog1.s
   Uses
      At line 61 in file prog1.s
Comment: Exit used once
FaultISR 00000054

Symbol: FaultISR
   Definitions
      At line 64 in file prog1.s
   Uses
      At line 20 in file prog1.s
      At line 64 in file prog1.s

Happened 00000064

Symbol: Happened
   Definitions
      At line 75 in file prog1.s
   Uses
      At line 71 in file prog1.s
Comment: Happened used once
IntDefaultHandler 00000056

Symbol: IntDefaultHandler
   Definitions
      At line 66 in file prog1.s
   Uses
      At line 21 in file prog1.s
      At line 22 in file prog1.s
      At line 23 in file prog1.s

Loop1_STR_string 00000068

Symbol: Loop1_STR_string
   Definitions
      At line 78 in file prog1.s
   Uses
      At line 82 in file prog1.s
Comment: Loop1_STR_string used once
Loop2_STR_string 00000086

Symbol: Loop2_STR_string
   Definitions
      At line 94 in file prog1.s
   Uses
      At line 98 in file prog1.s
Comment: Loop2_STR_string used once
MSG_with_Error 000000A4

Symbol: MSG_with_Error
   Definitions
      At line 109 in file prog1.s
   Uses
      At line 76 in file prog1.s
Comment: MSG_with_Error used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

MSG_without_Error 000000BA

Symbol: MSG_without_Error
   Definitions
      At line 111 in file prog1.s
   Uses
      At line 92 in file prog1.s
Comment: MSG_without_Error used once
NmiISR 00000052

Symbol: NmiISR
   Definitions
      At line 63 in file prog1.s
   Uses
      At line 19 in file prog1.s
      At line 63 in file prog1.s

NotHappened 00000082

Symbol: NotHappened
   Definitions
      At line 91 in file prog1.s
   Uses
      At line 72 in file prog1.s
Comment: NotHappened used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 12 in file prog1.s
   Uses
      None
Comment: RESET unused
Reset_Handler 0000001C

Symbol: Reset_Handler
   Definitions
      At line 28 in file prog1.s
   Uses
      At line 18 in file prog1.s
      At line 25 in file prog1.s

done 000000A0

Symbol: done
   Definitions
      At line 107 in file prog1.s
   Uses
      At line 107 in file prog1.s
Comment: done used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DivbyZ 00000D14

Symbol: DivbyZ
   Definitions
      At line 2 in file prog1.s
   Uses
      At line 39 in file prog1.s
Comment: DivbyZ used once
NVICBase E000E000

Symbol: NVICBase
   Definitions
      At line 5 in file prog1.s
   Uses
      At line 38 in file prog1.s
Comment: NVICBase used once
SYSHNDCTRL 00000D24

Symbol: SYSHNDCTRL
   Definitions
      At line 3 in file prog1.s
   Uses
      At line 45 in file prog1.s
Comment: SYSHNDCTRL used once
Stack 00000100

Symbol: Stack
   Definitions
      At line 1 in file prog1.s
   Uses
      At line 9 in file prog1.s
      At line 17 in file prog1.s

Usagefault 00000D2A

Symbol: Usagefault
   Definitions
      At line 4 in file prog1.s
   Uses
      At line 68 in file prog1.s
Comment: Usagefault used once
5 symbols
355 symbols in table
