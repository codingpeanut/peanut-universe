


ARM Macro Assembler    Page 1 


    1 00000000 00000100 
                       Stack   EQU              0x00000100
    2 00000000 00000D14 
                       DivbyZ  EQU              0xD14
    3 00000000 00000D24 
                       SYSHNDCTRL
                               EQU              0xD24
    4 00000000 00000D2A 
                       Usagefault
                               EQU              0xD2A
    5 00000000 E000E000 
                       NVICBase
                               EQU              0xE000E000
    6 00000000 40000000 
                       RAMSTART
                               EQU              0x40000000
    7 00000000         
    8 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
 = 3
    9 00000000         StackMem
   10 00000000                 SPACE            Stack
   11 00000100                 PRESERVE8
   12 00000100         
   13 00000100         
   14 00000100                 AREA             Timer, CODE, READONLY
   15 00000000                 THUMB
   16 00000000         ; The vector table sits here
   17 00000000         ; We'll define just a few of them and leave the rest at 
                       0 for now
   18 00000000 00000100        DCD              StackMem + Stack ; Top of Stack
                                                            
   19 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   20 00000008 00000000        DCD              NmiISR      ; NMI Handler
   21 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   22 00000010 00000000        DCD              IntDefaultHandler 
                                                            ; MPU Fault Handler
                                                            
   23 00000014 00000000        DCD              IntDefaultHandler 
                                                            ; Bus Fault Handler
                                                            
   24 00000018 00000000        DCD              IntDefaultHandler ; Usage Fault
                                                             Handler
   25 0000001C         
   26 0000001C                 EXPORT           Reset_Handler
   27 0000001C                 ENTRY
   28 0000001C         
   29 0000001C         Reset_Handler
   30 0000001C         ; enable the divide-by-zero trap
   31 0000001C         ; located in the NVIC
   32 0000001C         ; base: 0xE000E000
   33 0000001C         ; offset: 0xD14
   34 0000001C         ; bit: 4
   35 0000001C F04F 26E0       LDR              r6, =NVICBase
   36 00000020 F640 5714       LDR              r7, =DivbyZ
   37 00000024 59F1            LDR              r1, [r6, r7]
   38 00000026 F041 0110       ORR              r1, #0x10   ; enable bit 4
   39 0000002A 51F1            STR              r1, [r6, r7]
   40 0000002C         



ARM Macro Assembler    Page 2 


   41 0000002C         ; now turn on the usage fault exception
   42 0000002C F640 5724       LDR              r7, =SYSHNDCTRL ; (p. 163)
   43 00000030 59F1            LDR              r1, [r6, r7]
   44 00000032 F441 2180       ORR              r1, #0x40000
   45 00000036 51F1            STR              r1, [r6, r7]
   46 00000038         
   47 00000038         ; try out a divide by 2 then a divide by 0!
   48 00000038 F04F 0000       MOV              r0, #0
   49 0000003C F04F 3111       MOV              r1, #0x11111111
   50 00000040 F04F 3222       MOV              r2, #0x22222222
   51 00000044 F04F 3333       MOV              r3, #0x33333333
   52 00000048         
   53 00000048         ; this divide works just fine
   54 00000048 FBB2 F4F1       UDIV             r4, r2, r1
   55 0000004C         ; this divide takes an exception
   56 0000004C FBB3 F5F0       UDIV             r5, r3, r0
   57 00000050         
   58 00000050 E7FE    Exit    B                Exit
   59 00000052         
   60 00000052 E7FE    NmiISR  B                NmiISR
   61 00000054 E7FE    FaultISR
                               B                FaultISR
   62 00000056         
   63 00000056         
   64 00000056         IntDefaultHandler
   65 00000056 F64B 6AEF       MOVW             r10, #0xBEEF
   66 0000005A F6CD 6AAD       MOVT             r10, #0xDEAD
   67 0000005E E7FE    Spot    B                Spot
   68 00000060         
   69 00000060         
   70 00000060         CPU_CONFIG
   71 00000060         ; base 0x40000000
   72 00000060 F04F 4080       LDR              r0, =0x40000000 
                                                            ; base 0x400FE000
   73 00000064 F04F 0260       MOV              r2, #0x60   ; offset 0x060 for 
                                                            this register
   74 00000068 491D            LDR              r1, =0x01C00540
   75 0000006A 5081            STR              r1, [r0, r2] ; write the regist
                                                            er’s content
   76 0000006C         
   77 0000006C F240 6704       LDR              r7, =0x604  ; enable timer0 - R
                                                            CGCTIMER
   78 00000070 59C1            LDR              r1, [r0, r7] ; p. 321, base 0x4
                                                            00FE000
   79 00000072 F041 0101       ORR              r1, #0x1    ; offset - 0x604
   80 00000076 51C1            STR              r1, [r0, r7] ; bit 0
   81 00000078         
   82 00000078 BF00            NOP
   83 0000007A BF00            NOP
   84 0000007C BF00            NOP
   85 0000007E BF00            NOP
   86 00000080 BF00            NOP                          ; give myself 5 clo
                                                            cks per spec
   87 00000082         
   88 00000082         TIMER_CONFIG
   89 00000082         ; base 0x40030000
   90 00000082 F04F 4880       LDR              r8, =0x40000000 ; configure tim
                                                            er0 to be
   91 00000086         ; one-shot, p.698 GPTMTnMR



ARM Macro Assembler    Page 3 


   92 00000086 F04F 0704       MOV              r7, #0x4
   93 0000008A F858 1007       LDR              r1, [r8, r7] ; offset 0x4
   94 0000008E F041 0121       ORR              r1, #0x21   ; bit 5 = 1, 1:0 = 
                                                            0x1
   95 00000092 F848 1007       STR              r1, [r8, r7]
   96 00000096         
   97 00000096 F8D8 1000       LDR              r1, [r8]    ; set as 16-bit tim
                                                            er only
   98 0000009A F041 0104       ORR              r1, #0x4    ; base 0x40030000
   99 0000009E F8C8 1000       STR              r1, [r8]    ; offset 0, bit[2:0
                                                            ] = 0x4
  100 000000A2         
  101 000000A2         ; offset 0x30
  102 000000A2 F04F 0730       MOV              r7, #0x30   ; set the match val
                                                            ue at 0
  103 000000A6         ; match value 32 bits (from 0x FFFF FFFF to match value)
                       
  104 000000A6 490F            LDR              r1, =0xFF1B1E3F ; match value =
                                                             5 sec * 15 MHz = 0
                                                            xE4E1C0, 0xFFFFFFFF
                                                             - 0xE4E1C0 = 0xFF1
                                                            B1E3F
  105 000000A8 F848 1007       STR              r1, [r8, r7] ; offset - 0x38
  106 000000AC         
  107 000000AC         GPTM_CONFIG
  108 000000AC F04F 4880       LDR              r8, =0x40000000
  109 000000B0 F04F 0718       MOV              r7, #0x18   ; set bits in the G
                                                            PTM
  110 000000B4 F858 1007       LDR              r1, [r8, r7] ; Interrupt Mask R
                                                            egister
  111 000000B8 F041 0110       ORR              r1, #0x10   ; p. 714 - base: 0x
                                                            40030000
  112 000000BC F848 1007       STR              r1, [r8, r7] ; offset - 0x18, b
                                                            it 5
  113 000000C0         
  114 000000C0         NVIC_CONFIG
  115 000000C0 F04F 26E0       LDR              r6, =0xE000E000 ; enable interr
                                                            upt on timer0
  116 000000C4         ; p. 132, base 0xE000E000
  117 000000C4 F44F 7780       MOV              r7, #0x100  ; offset - 0x100, b
                                                            it 19
  118 000000C8 F44F 2100       MOV              r1, #(1<<19) ; enable bit 19 fo
                                                            r timer0
  119 000000CC 51F1            STR              r1, [r6, r7]
  120 000000CE         
  121 000000CE         
  122 000000CE         
  123 000000CE         
  124 000000CE         start
  125 000000CE F04F 4680       LDR              r6, =0x40000000 
                                                            ; start the timer
  126 000000D2 F04F 070C       MOV              r7, #0xC
  127 000000D6 59F1            LDR              r1, [r6, r7]
  128 000000D8 F041 0101       ORR              r1, #0x1
  129 000000DC 51F1            STR              r1, [r6, r7] ; go!!
  130 000000DE         
  131 000000DE E7FE    stop    B                stop
  132 000000E0                 END
              01C00540 



ARM Macro Assembler    Page 4 


              FF1B1E3F 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\prog1.d -o.\objects\prog1.o -IC:\Keil_v5\ARM\RV31\INC
 -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\TI\TM4C123 --predefine="__
EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\prog1.l
st prog1.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 8 in file prog1.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 9 in file prog1.s
   Uses
      At line 18 in file prog1.s
Comment: StackMem used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CPU_CONFIG 00000060

Symbol: CPU_CONFIG
   Definitions
      At line 70 in file prog1.s
   Uses
      None
Comment: CPU_CONFIG unused
Exit 00000050

Symbol: Exit
   Definitions
      At line 58 in file prog1.s
   Uses
      At line 58 in file prog1.s
Comment: Exit used once
FaultISR 00000054

Symbol: FaultISR
   Definitions
      At line 61 in file prog1.s
   Uses
      At line 21 in file prog1.s
      At line 61 in file prog1.s

GPTM_CONFIG 000000AC

Symbol: GPTM_CONFIG
   Definitions
      At line 107 in file prog1.s
   Uses
      None
Comment: GPTM_CONFIG unused
IntDefaultHandler 00000056

Symbol: IntDefaultHandler
   Definitions
      At line 64 in file prog1.s
   Uses
      At line 22 in file prog1.s
      At line 23 in file prog1.s
      At line 24 in file prog1.s

NVIC_CONFIG 000000C0

Symbol: NVIC_CONFIG
   Definitions
      At line 114 in file prog1.s
   Uses
      None
Comment: NVIC_CONFIG unused
NmiISR 00000052

Symbol: NmiISR
   Definitions
      At line 60 in file prog1.s
   Uses
      At line 20 in file prog1.s
      At line 60 in file prog1.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Reset_Handler 0000001C

Symbol: Reset_Handler
   Definitions
      At line 29 in file prog1.s
   Uses
      At line 19 in file prog1.s
      At line 26 in file prog1.s

Spot 0000005E

Symbol: Spot
   Definitions
      At line 67 in file prog1.s
   Uses
      At line 67 in file prog1.s
Comment: Spot used once
TIMER_CONFIG 00000082

Symbol: TIMER_CONFIG
   Definitions
      At line 88 in file prog1.s
   Uses
      None
Comment: TIMER_CONFIG unused
Timer 00000000

Symbol: Timer
   Definitions
      At line 14 in file prog1.s
   Uses
      None
Comment: Timer unused
start 000000CE

Symbol: start
   Definitions
      At line 124 in file prog1.s
   Uses
      None
Comment: start unused
stop 000000DE

Symbol: stop
   Definitions
      At line 131 in file prog1.s
   Uses
      At line 131 in file prog1.s
Comment: stop used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DivbyZ 00000D14

Symbol: DivbyZ
   Definitions
      At line 2 in file prog1.s
   Uses
      At line 36 in file prog1.s
Comment: DivbyZ used once
NVICBase E000E000

Symbol: NVICBase
   Definitions
      At line 5 in file prog1.s
   Uses
      At line 35 in file prog1.s
Comment: NVICBase used once
RAMSTART 40000000

Symbol: RAMSTART
   Definitions
      At line 6 in file prog1.s
   Uses
      None
Comment: RAMSTART unused
SYSHNDCTRL 00000D24

Symbol: SYSHNDCTRL
   Definitions
      At line 3 in file prog1.s
   Uses
      At line 42 in file prog1.s
Comment: SYSHNDCTRL used once
Stack 00000100

Symbol: Stack
   Definitions
      At line 1 in file prog1.s
   Uses
      At line 10 in file prog1.s
      At line 18 in file prog1.s

Usagefault 00000D2A

Symbol: Usagefault
   Definitions
      At line 4 in file prog1.s
   Uses
      None
Comment: Usagefault unused
6 symbols
356 symbols in table
