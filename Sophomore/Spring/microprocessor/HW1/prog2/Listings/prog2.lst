


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             UARTDEMO, CODE, READONLY
    2 00000000 E002C000 
                       PINSEL0 EQU              0XE002C000  ; controls the func
                                                            tion of the pins
    3 00000000 E000C000 
                       U0START EQU              0XE000C000  ; start of UART0 re
                                                            gister
    4 00000000 0000000C 
                       LCR0    EQU              0XC         ; line control regi
                                                            ster for UART0
    5 00000000 00000014 
                       LSR0    EQU              0X14        ; line status regis
                                                            ter for UART0
    6 00000000 40000000 
                       RAMSTART
                               EQU              0X40000000  ; start of onboard 
                                                            RAM for 2104
    7 00000000         ; 411440521 JoshLee
    8 00000000                 ENTRY
    9 00000000         start
   10 00000000 E59FD0BC        LDR              sp, =RAMSTART ; set up stack po
                                                            inter
   11 00000004 EB00000A        BL               UARTConfig  ; initialize/config
                                                            ure UART0
   12 00000008         
   13 00000008 E59F10B8        LDR              r1, =CharData ; starting addres
                                                            s of characters
   14 0000000C         Loop1_Tx
   15 0000000C E4D10001        LDRB             r0, [r1], #1 ; load character, 
                                                            increment address
   16 00000010 E3500000        CMP              r0, #0      ; null terminated?
   17 00000014 1B000014        BLNE             Transmit    ; send character to
                                                             UAER0
   18 00000018 1AFFFFFB        BNE              Loop1_Tx    ; continue if not a
                                                             '0'
   19 0000001C         
   20 0000001C E3A09014        MOV              r9, #20
   21 00000020         Loop1_Rx
   22 00000020 EB000018        BL               Receive
   23 00000024 E4C10001        STRB             r0, [r1], #1
   24 00000028 E2599001        SUBS             r9, r9, #1
   25 0000002C 1AFFFFFB        BNE              Loop1_Rx
   26 00000030         
   27 00000030 EAFFFFFE 
                       done    B                done        ; otherwise we're d
                                                            one
   28 00000034         
   29 00000034         ; Subroutine UARTConfig
   30 00000034         ; This subroutine configures the I/O pins first. It
   31 00000034         ; then sets up the UART control register. The
   32 00000034         ; parameters
   33 00000034         ; are set to 8 bits, no parity and 1 stop bit.
   34 00000034         ; Registers used:
   35 00000034         ; r5 - scratch register
   36 00000034         ; r6 - scratch register
   37 00000034         ; inputs: none
   38 00000034         ; outputs: none
   39 00000034         ; 411440521 JoshLee
   40 00000034         UARTConfig



ARM Macro Assembler    Page 2 


   41 00000034 E8AD4060        STMIA            sp!, {r5, r6, lr}
   42 00000038 E59F508C        LDR              r5, =PINSEL0 ; base address of 
                                                            register
   43 0000003C E5956000        LDR              r6, [r5]    ; get contents
   44 00000040 E3C6600F        BIC              r6, r6, #0xF ; clear out lower 
                                                            nibble
   45 00000044 E3866005        ORR              r6, r6, #0x5 ; sets P0.0 to Tx0
                                                             and P0.1 to Rx0
   46 00000048 E5856000        STR              r6, [r5]    ; r/modify/w back t
                                                            o register
   47 0000004C E59F507C        LDR              r5, =U0START
   48 00000050 E3A06083        MOV              r6, #0x83   ; set 8 bits, no pa
                                                            rity, 1 stop bit
   49 00000054 E5C5600C        STRB             r6, [r5, #LCR0] ; write control
                                                             byte to LCR
   50 00000058 E3A06061        MOV              r6, #0x61   ; 9600 baud @15 MHz
                                                             VPB clock
   51 0000005C E5C56000        STRB             r6, [r5]    ; store control byt
                                                            e
   52 00000060 E3A06003        MOV              r6, #3      ; set DLAB = 0
   53 00000064 E5C5600C        STRB             r6, [r5, #LCR0] ; Tx and Rx buf
                                                            fers set up
   54 00000068 E93D8060        LDMDB            sp!, {r5, r6, pc}
   55 0000006C         ; 411440521 JoshLee
   56 0000006C         ; Subroutine Transmit
   57 0000006C         ; This routine puts one byte into the UART
   58 0000006C         ; for transmitting.
   59 0000006C         ; Register used:
   60 0000006C         ; r5 - scratch
   61 0000006C         ; r6 - scratch
   62 0000006C         ; inputs: r0 - byte to transmit
   63 0000006C         ; outputs: none
   64 0000006C         ; 411440521 JoshLee
   65 0000006C         
   66 0000006C         Transmit
   67 0000006C E8AD4060        STMIA            sp!, {r5, r6, lr}
   68 00000070 E59F5058        LDR              r5, =U0START
   69 00000074         wait_Tx
   70 00000074 E5D56014        LDRB             r6, [r5, #LSR0] ; get status of
                                                             buffer
   71 00000078 E3160020        TST              r6, #0x20   ; buffer empty?
   72 0000007C 0AFFFFFC        BEQ              wait_Tx     ; spin until buffer
                                                             empty
   73 00000080 E5C50000        STRB             r0, [r5]
   74 00000084 E93D8060        LDMDB            sp!, {r5, r6, pc}
   75 00000088         
   76 00000088         Receive
   77 00000088 E8AD4060        STMIA            sp!, {r5, r6, lr}
   78 0000008C E59F503C        LDR              r5, =U0START
   79 00000090         wait_Rx
   80 00000090 E5D56014        LDRB             r6, [r5, #LSR0] ; get status of
                                                             buffer
   81 00000094 E3160001        TST              r6, #1      ; data ready?
   82 00000098 0AFFFFFC        BEQ              wait_Rx     ; until data ready
   83 0000009C E316000E        TST              r6, 0xE     ; verify data
   84 000000A0 E5D50000        LDRB             r0, [r5]
   85 000000A4 E93D8060        LDMDB            sp!, {r5, r6, pc}
   86 000000A8         CharData
   87 000000A8 54 4B 55 



ARM Macro Assembler    Page 3 


              2D 45 43 
              45 2D 34 
              31 31 34 
              34 30 35 
              32 31 2D 
              4A 6F 73 
              68 4C 65 
              65 00            DCB              "TKU-ECE-411440521-JoshLee", 0
   88 000000C2                 END
              00 00 40000000 
              00000000 
              E002C000 
              E000C000 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\prog2.d -o.\objects\prog2.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\C
MSIS\Include -IC:\Keil_v5\ARM\INC\Philips --predefine="__EVAL SETA 1" --predefi
ne="__UVISION_VERSION SETA 528" --list=.\listings\prog2.lst prog2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CharData 000000A8

Symbol: CharData
   Definitions
      At line 86 in file prog2.s
   Uses
      At line 13 in file prog2.s
Comment: CharData used once
Loop1_Rx 00000020

Symbol: Loop1_Rx
   Definitions
      At line 21 in file prog2.s
   Uses
      At line 25 in file prog2.s
Comment: Loop1_Rx used once
Loop1_Tx 0000000C

Symbol: Loop1_Tx
   Definitions
      At line 14 in file prog2.s
   Uses
      At line 18 in file prog2.s
Comment: Loop1_Tx used once
Receive 00000088

Symbol: Receive
   Definitions
      At line 76 in file prog2.s
   Uses
      At line 22 in file prog2.s
Comment: Receive used once
Transmit 0000006C

Symbol: Transmit
   Definitions
      At line 66 in file prog2.s
   Uses
      At line 17 in file prog2.s
Comment: Transmit used once
UARTConfig 00000034

Symbol: UARTConfig
   Definitions
      At line 40 in file prog2.s
   Uses
      At line 11 in file prog2.s
Comment: UARTConfig used once
UARTDEMO 00000000

Symbol: UARTDEMO
   Definitions
      At line 1 in file prog2.s
   Uses
      None
Comment: UARTDEMO unused
done 00000030

Symbol: done



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 27 in file prog2.s
   Uses
      At line 27 in file prog2.s
Comment: done used once
start 00000000

Symbol: start
   Definitions
      At line 9 in file prog2.s
   Uses
      None
Comment: start unused
wait_Rx 00000090

Symbol: wait_Rx
   Definitions
      At line 79 in file prog2.s
   Uses
      At line 82 in file prog2.s
Comment: wait_Rx used once
wait_Tx 00000074

Symbol: wait_Tx
   Definitions
      At line 69 in file prog2.s
   Uses
      At line 72 in file prog2.s
Comment: wait_Tx used once
11 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

LCR0 0000000C

Symbol: LCR0
   Definitions
      At line 4 in file prog2.s
   Uses
      At line 49 in file prog2.s
      At line 53 in file prog2.s

LSR0 00000014

Symbol: LSR0
   Definitions
      At line 5 in file prog2.s
   Uses
      At line 70 in file prog2.s
      At line 80 in file prog2.s

PINSEL0 E002C000

Symbol: PINSEL0
   Definitions
      At line 2 in file prog2.s
   Uses
      At line 42 in file prog2.s
Comment: PINSEL0 used once
RAMSTART 40000000

Symbol: RAMSTART
   Definitions
      At line 6 in file prog2.s
   Uses
      At line 10 in file prog2.s
Comment: RAMSTART used once
U0START E000C000

Symbol: U0START
   Definitions
      At line 3 in file prog2.s
   Uses
      At line 47 in file prog2.s
      At line 68 in file prog2.s
      At line 78 in file prog2.s

5 symbols
350 symbols in table
