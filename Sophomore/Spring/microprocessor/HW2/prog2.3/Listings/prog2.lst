


ARM Macro Assembler    Page 1 


    1 00000000 00000100 
                       Stack   EQU              0x00000100
    2 00000000 00000D14 
                       DivbyZ  EQU              0xD14
    3 00000000 00000D24 
                       SYSHNDCTRL
                               EQU              0xD24
    4 00000000 00000D2A 
                       Usagefault
                               EQU              0xD2A
    5 00000000 E000E000 
                       NVICBase
                               EQU              0xE000E000
    6 00000000         
    7 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
 = 3
    8 00000000         StackMem
    9 00000000                 SPACE            Stack
   10 00000100                 PRESERVE8
   11 00000100         
   12 00000100                 AREA             RESET, CODE, READONLY
   13 00000000                 THUMB
   14 00000000         
   15 00000000         ; The vector table sits here
   16 00000000         ; We'll define just a few of them and leave the rest at 
                       0 for now
   17 00000000 00000100        DCD              StackMem + Stack ; Top of Stack
                                                            
   18 00000004 00000000        DCD              Reset_Handler ; Reset Handler
   19 00000008 00000000        DCD              NmiISR      ; NMI Handler
   20 0000000C 00000000        DCD              FaultISR    ; Hard Fault Handle
                                                            r
   21 00000010 00000000        DCD              IntDefaultHandler 
                                                            ; MPU Fault Handler
                                                            
   22 00000014 00000000        DCD              IntDefaultHandler 
                                                            ; Bus Fault Handler
                                                            
   23 00000018 00000000        DCD              IntDefaultHandler ; Usage Fault
                                                             Handler
   24 0000001C         
   25 0000001C                 EXPORT           Reset_Handler
   26 0000001C                 ENTRY
   27 0000001C         ; 411440521 JoshLee
   28 0000001C         Reset_Handler
   29 0000001C         ; Step
   30 0000001C         ; 1. privileged thread mode to unprivileged thread mode
   31 0000001C F3EF 8814       MRS              r8, CONTROL
   32 00000020 F048 0801       ORR              r8, #1
   33 00000024 F388 8814       MSR              CONTROL, r8
   34 00000028         
   35 00000028         ; enable the divide-by-zero trap
   36 00000028         ; located in the NVIC
   37 00000028         ; base: 0xE000E000
   38 00000028         ; offset: 0xD14
   39 00000028         ; bit: 4
   40 00000028 F04F 26E0       LDR              r6, =NVICBase
   41 0000002C F640 5714       LDR              r7, =DivbyZ
   42 00000030 59F1            LDR              r1, [r6, r7]



ARM Macro Assembler    Page 2 


   43 00000032 F041 0110       ORR              r1, #0x10   ; enable bit 4
   44 00000036 51F1            STR              r1, [r6, r7]
   45 00000038         
   46 00000038         ; 2. quote below to turn off usage fault exception (hard
                        fault)
   47 00000038         ; now turn on the usage fault exception
   48 00000038         ; LDR  r7, =SYSHNDCTRL
   49 00000038         ; LDR  r1, [r6, r7]
   50 00000038         ; ORR  r1, #0x40000
   51 00000038         ; STR  r1, [r6, r7]
   52 00000038         
   53 00000038         ; 3. make a hard fault under unprivileged thread mode
   54 00000038         ; try out a divide by 2 then a divide by 0!
   55 00000038 F04F 0000       MOV              r0, #0
   56 0000003C F04F 3111       MOV              r1, #0x11111111
   57 00000040 F04F 3222       MOV              r2, #0x22222222
   58 00000044 F04F 3333       MOV              r3, #0x33333333
   59 00000048         
   60 00000048         ; this divide works just fine
   61 00000048 FBB2 F4F1       UDIV             r4, r2, r1
   62 0000004C         ; this divide takes an exception
   63 0000004C FBB3 F5F0       UDIV             r5, r3, r0
   64 00000050         
   65 00000050 E7FE    Exit    B                Exit
   66 00000052         
   67 00000052 E7FE    NmiISR  B                NmiISR
   68 00000054         
   69 00000054         FaultISR
   70 00000054 F04F 3A77       LDR              r10, =0x77777777
   71 00000058 4770            BX               lr
   72 0000005A         
   73 0000005A         
   74 0000005A         IntDefaultHandler
   75 0000005A         ; let's read the Usage Fault Status Register
   76 0000005A F640 572A       LDR              r7, =Usagefault
   77 0000005E 5BF1            LDRH             r1, [r6, r7]
   78 00000060 F491 7F00       TEQ              r1, #0x200
   79 00000064 D100            BNE              Happened
   80 00000066 D00E            BEQ              NotHappened
   81 00000068         
   82 00000068         Happened
   83 00000068 4B1B            LDR              r3, =divide_by_0
   84 0000006A 491C            LDR              r1, =0x20000120 ; starting addr
                                                            ess for string to b
                                                            e write
   85 0000006C         Loop1_STR_string
   86 0000006C F853 5B01       LDR              r5, [r3], #1
   87 00000070 F801 5B01       STRB             r5, [r1], #1
   88 00000074 2D00            CMP              r5, #0
   89 00000076 D1F9            BNE              Loop1_STR_string
   90 00000078         
   91 00000078 F3EF 8814       MRS              r8, CONTROL
   92 0000007C F048 0801       ORR              r8, #1
   93 00000080 F388 8814       MSR              CONTROL, r8
   94 00000084         
   95 00000084 4770            BX               lr
   96 00000086         
   97 00000086         NotHappened
   98 00000086 4B16            LDR              r3, =not_divide_by_0



ARM Macro Assembler    Page 3 


   99 00000088 4916            LDR              r1, =0x20000130 ; starting addr
                                                            ess for string to b
                                                            e write
  100 0000008A         Loop2_STR_string
  101 0000008A F853 5B01       LDR              r5, [r3], #1
  102 0000008E F801 5B01       STRB             r5, [r1], #1
  103 00000092 2D00            CMP              r5, #0
  104 00000094 D1F9            BNE              Loop2_STR_string
  105 00000096         
  106 00000096 F3EF 8814       MRS              r8, CONTROL
  107 0000009A F048 0801       ORR              r8, #1
  108 0000009E F388 8814       MSR              CONTROL, r8
  109 000000A2         
  110 000000A2 4770            BX               lr
  111 000000A4         
  112 000000A4         
  113 000000A4 E7FE    done    B                done
  114 000000A6 00 00           ALIGN
  115 000000A8         divide_by_0
  116 000000A8 44 49 56 
              49 44 45 
              2D 42 59 
              2D 5A 45 
              52 4F 20 
              45 76 65 
              6E 74 00         DCB              "DIVIDE-BY-ZERO Event", 0
  117 000000BD         not_divide_by_0
  118 000000BD 4E 6F 20 
              44 49 56 
              49 44 45 
              2D 42 59 
              2D 5A 45 
              52 4F 20 
              45 76 65 
              6E 74 00         DCB              "No DIVIDE-BY-ZERO Event", 0
  119 000000D5                 END
              00 00 00 
              00000000 
              20000120 
              00000000 
              20000130 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\prog2.d -o.\objects\prog2.o -IC:\Keil_v5\ARM\RV31\INC
 -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\INC\TI\TM4C123 --predefine="__
EVAL SETA 1" --predefine="__UVISION_VERSION SETA 528" --list=.\listings\prog2.l
st prog2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 7 in file prog2.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 8 in file prog2.s
   Uses
      At line 17 in file prog2.s
Comment: StackMem used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Exit 00000050

Symbol: Exit
   Definitions
      At line 65 in file prog2.s
   Uses
      At line 65 in file prog2.s
Comment: Exit used once
FaultISR 00000054

Symbol: FaultISR
   Definitions
      At line 69 in file prog2.s
   Uses
      At line 20 in file prog2.s
Comment: FaultISR used once
Happened 00000068

Symbol: Happened
   Definitions
      At line 82 in file prog2.s
   Uses
      At line 79 in file prog2.s
Comment: Happened used once
IntDefaultHandler 0000005A

Symbol: IntDefaultHandler
   Definitions
      At line 74 in file prog2.s
   Uses
      At line 21 in file prog2.s
      At line 22 in file prog2.s
      At line 23 in file prog2.s

Loop1_STR_string 0000006C

Symbol: Loop1_STR_string
   Definitions
      At line 85 in file prog2.s
   Uses
      At line 89 in file prog2.s
Comment: Loop1_STR_string used once
Loop2_STR_string 0000008A

Symbol: Loop2_STR_string
   Definitions
      At line 100 in file prog2.s
   Uses
      At line 104 in file prog2.s
Comment: Loop2_STR_string used once
NmiISR 00000052

Symbol: NmiISR
   Definitions
      At line 67 in file prog2.s
   Uses
      At line 19 in file prog2.s
      At line 67 in file prog2.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

NotHappened 00000086

Symbol: NotHappened
   Definitions
      At line 97 in file prog2.s
   Uses
      At line 80 in file prog2.s
Comment: NotHappened used once
RESET 00000000

Symbol: RESET
   Definitions
      At line 12 in file prog2.s
   Uses
      None
Comment: RESET unused
Reset_Handler 0000001C

Symbol: Reset_Handler
   Definitions
      At line 28 in file prog2.s
   Uses
      At line 18 in file prog2.s
      At line 25 in file prog2.s

divide_by_0 000000A8

Symbol: divide_by_0
   Definitions
      At line 115 in file prog2.s
   Uses
      At line 83 in file prog2.s
Comment: divide_by_0 used once
done 000000A4

Symbol: done
   Definitions
      At line 113 in file prog2.s
   Uses
      At line 113 in file prog2.s
Comment: done used once
not_divide_by_0 000000BD

Symbol: not_divide_by_0
   Definitions
      At line 117 in file prog2.s
   Uses
      At line 98 in file prog2.s
Comment: not_divide_by_0 used once
13 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DivbyZ 00000D14

Symbol: DivbyZ
   Definitions
      At line 2 in file prog2.s
   Uses
      At line 41 in file prog2.s
Comment: DivbyZ used once
NVICBase E000E000

Symbol: NVICBase
   Definitions
      At line 5 in file prog2.s
   Uses
      At line 40 in file prog2.s
Comment: NVICBase used once
SYSHNDCTRL 00000D24

Symbol: SYSHNDCTRL
   Definitions
      At line 3 in file prog2.s
   Uses
      None
Comment: SYSHNDCTRL unused
Stack 00000100

Symbol: Stack
   Definitions
      At line 1 in file prog2.s
   Uses
      At line 9 in file prog2.s
      At line 17 in file prog2.s

Usagefault 00000D2A

Symbol: Usagefault
   Definitions
      At line 4 in file prog2.s
   Uses
      At line 76 in file prog2.s
Comment: Usagefault used once
5 symbols
355 symbols in table
